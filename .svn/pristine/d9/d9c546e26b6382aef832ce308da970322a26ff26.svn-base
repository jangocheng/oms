<template>
    <div style="padding:10px 20px 0 20px;">
        <div style="margin-bottom:10px;" class="yGFm">
            <el-input icon="search" placeholder="规范名称/规范类型" style="width:30%;" v-model="input"></el-input>
            <el-button type="primary" @click="sousou">搜索</el-button>
            <el-button type="primary" @click="uplods">上传</el-button>
        </div>
        <div style="border:1px solid #838383;height:0;margin-bottom:15px;"></div>
        <el-table border style="width: 100%;margin-bottom:10px;" stripe :data="tableData" v-loading.body="loading">
            <el-table-column prop="key" label="序号" width="80"></el-table-column>
            <el-table-column prop="standardName" label="规范名称"></el-table-column>
            <el-table-column prop="standardType" label="规范类型"></el-table-column>
            <el-table-column prop="sid" label="操作" inline-template>
                <template>
                    <a :href="row.attachPath"><el-button class="L-button" size="small" ><img src="../imgs/xiazai.png"></el-button></a>
                    <el-button class="L-button" size="small" @click="edit(row)"><img src="../imgs/edit1.png"></el-button>
                    <el-button class="L-button" size="small" @click="del(row)"><img src="../imgs/del.png"></el-button>
                </template>
            </el-table-column>
        </el-table>
        <!-- 分页 -->
        <el-pagination
        style="text-align:right;"
         :current-page="currentPage"
         layout="total,prev, pager, next"
         :total="total"
         :page-size="pageSize"
         @current-change="currentChange">
       </el-pagination>
       <!-- 上传 -->
       <el-dialog title="上传" v-model="dialogs">
           <el-form>
               <el-form-item label="规范类型：">
                   <el-select v-model="values.standardType" >
                       <el-option v-for="(item,key) in type" :label="item.type" :value="item.type" :key="item.type"></el-option>
                   </el-select>
               </el-form-item>
               <el-form-item>
                   <el-upload :on-success="succs" :on-error="err" :action="action" list-type="picture" name="standardFiles" :headers="head"  :data="values"  accept="application/msword,application/pdf">
                       <div slot="tip" class="el-upload__tip">只能选择.pdf,.doc文件</div>
                       <el-button slot="trigger" size="small" type="primary">选取文件</el-button>
                   </el-upload>
               </el-form-item>
           </el-form>
       </el-dialog>
       <!-- 修改 -->
       <el-dialog title="修改" v-model="editDialog">
           <el-form>
               <el-form-item label="规范类型：">
                   <el-select v-model="editV.standardType" >
                       <el-option v-for="(item,key) in type" :label="item.type" :value="item.type" :key="item.type"></el-option>
                   </el-select>
               </el-form-item>
               <el-form-item>
                   <el-upload :on-success="succ" :on-error="err" :action="updateStandard" list-type="picture" name="standardFiles" ref="upload"
  :headers="head"  :data="editV" accept="application/msword,application/pdf">
                       <div slot="tip" class="el-upload__tip">只能选择.pdf,.doc文件</div>
                       <el-button slot="trigger" size="small" type="primary">选取文件</el-button>
                   </el-upload>
               </el-form-item>
           </el-form>
       </el-dialog>
    </div>
</template>
<script>
    import {api} from '../js/api/api.js'
    import {getCookie} from '../js/api/cookie.js'
    export default ({
        data () {
            return {
                head:{
                    Token:getCookie('token')
                },
                input:"",
                loading:true,
                action:api.saveStandard,
                updateStandard:api.updateStandard,
                dialogs:false,
                editDialog:false,
                currentPage:1,
                total:6,
                pageSize:10,
                values:{
                    standardType:""
                },
                editV:{
                    sid:"",
                    standardType:""
                },
                tableData:[
                    {
                        sid:1,
                        name:"小文",
                        type:"dov"
                    }
                ],
                type:[
                    {
                        type:"产品定义规范"
                    },
                    {
                        type:"生命周期管理"
                    },
                    {
                        type:"版本定义"
                    },
                    {
                        type:"发布流程"
                    }
                ]
            }
        },
        mounted () {
            this.getStandardDatagrid();
        },
        methods:{
            getStandardDatagrid () {
                let params={
                    	"rows":this.pageSize,
                    	"page":this.currentPage,
                    	"sort":"sid",
                    	"order":"desc"
                    }
                this.$http.post(api.getStandardDatagrid,params).then((response)=>{
                    // console.log(response.body.rows);
                    this.loading=!this.loading;
                    this.tableData=response.body.rows;
                    for(var key in this.tableData){
                        this.tableData[key].key=(this.currentPage-1)*10+(key*1+1)
                    }
                    this.total=response.body.total;

                })
            },
            currentChange(val){
                this.currentPage=val;
                this.loading=!this.loading;
                this.getStandardDatagrid();
            },
            uplods () {
                this.values.standardType=null;
                this.dialogs=!this.dialogs
            },

            succs (response) {
                // console.log(response)
                if(response.rtState){
                    this.$message({
                        message:response.rtMsg,
                        type:"success"
                    });
                    this.dialogs=!this.dialogs;
                    this.loading=!this.loading;
                    this.getStandardDatagrid();
                }else{
                    this.$message.error(response.rtMsg);
                }
            },
            succ (response) {
                // console.log(response)
                if(response.rtState){
                    this.$message({
                        message:response.rtMsg,
                        type:"success"
                    });
                    this.editDialog=!this.editDialog;
                    this.loading=!this.loading;
                    this.getStandardDatagrid();
                }else{
                    this.$message.error(response.rtMsg);
                }
            },
            err () {

            },
            edit (row){
                // console.log(row)
                this.editV.sid=row.sid;
                this.editDialog=!this.editDialog;
                this.editV.standardType=row.standardType
            },
            sousou () {
                let params={
                    	"rows":this.pageSize,
                    	"page":this.currentPage,
                    	"sort":"sid",
                    	"order":"desc",
                        "queryStr":this.input
                    }
                    this.loading=!this.loading;
                this.$http.post(api.getStandardDatagrid,params).then((response)=>{
                    // console.log(response.body.rows);
                    this.loading=!this.loading;
                    this.tableData=response.body.rows
                    for(var key in this.tableData){
                        this.tableData[key].key=(this.currentPage-1)*10+(key*1+1)
                    }
                })
            },
            del (row) {
                // console.log(row)
                this.$confirm("确定删除此项？",{
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning'
                }).then(()=>{
                    this.loading=!this.loading;
                    this.$http.post(api.deleteStandardById,{"sid":row.sid}).then((response)=>{
                        // console.log(response.body)
                        if(response.body.rtState){
                            this.$message({
                                message:response.body.rtMsg,
                                type:"success"
                            });
                            this.getStandardDatagrid();
                        }
                    })
                })
            }
        }
    })
</script>
<style>
    .yGFm>button:last-of-type{
        float:right;
    }
</style>
